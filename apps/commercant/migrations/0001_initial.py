# Generated by Django 5.2 on 2025-05-15 10:48

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Merchant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brand_name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("registration_date", models.DateTimeField(auto_now_add=True)),
                ("opening_hours", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.OneToOneField(
                        limit_choices_to={"role": "MERCHANT"},
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="merchant_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Merchant",
                "verbose_name_plural": "Merchants",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("FOOD", "Food"),
                            ("CLOTHING", "Clothing"),
                            ("ELECTRONICS", "Electronics"),
                            ("OTHER", "Other"),
                        ],
                        default="FOOD",
                        max_length=20,
                    ),
                ),
                (
                    "net_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "vat_rate",
                    models.DecimalField(decimal_places=3, default=0.2, max_digits=4),
                ),
                ("stock", models.PositiveIntegerField(default=0)),
                ("stock_alert_threshold", models.PositiveIntegerField(default=5)),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "merchant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="commercant.merchant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "transaction_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        limit_choices_to={"role": "CUSTOMER"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transactions",
                        to="commercant.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
            },
        ),
        migrations.AddIndex(
            model_name="merchant",
            index=models.Index(
                fields=["is_active"], name="commercant__is_acti_fb59a4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="merchant",
            index=models.Index(
                fields=["brand_name"], name="commercant__brand_n_fdd387_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.CheckConstraint(
                condition=models.Q(("net_price__gt", 0)), name="positive_net_price"
            ),
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.CheckConstraint(
                condition=models.Q(("stock__gte", 0)), name="non_negative_stock"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_date"], name="commercant__transac_239d07_idx"
            ),
        ),
    ]
